@page "/"
@page "/index"
@implements IDisposable
@attribute [Authorize]
@inject HttpClientX http
@using System.Threading

<div class="container">
    <div class="row mt-4 mb-5">
        @if (nodesStatus != null)
        {
            @foreach (var item in nodesStatus)
            {
                <div class="col-lg-3 col-md-4 col-sm-6 mt-4">
                    <NodeStatus Status="item" />
                </div>
            }
        }
        else
        {
            <Loading />
        }
    </div>
</div>

@code {
    private List<NodeStatusVM> nodesStatus;
    private CancellationTokenSource cts;

    protected override void OnInitialized()
    {
        cts = new CancellationTokenSource();
        var token = cts.Token;
        Task.Run(async () =>
        {
            while (!token.IsCancellationRequested)
            {
                try
                {
                    nodesStatus = await http.GetFromJsonAsync<List<NodeStatusVM>>("Home/Status", token);
                    StateHasChanged();
                }
                catch { }
                await Task.Delay(2000, token);
            }
        }, token);
    }

    void IDisposable.Dispose()
    {
        cts.Cancel();
        cts.Dispose();
    }
}